name: Investigation
common: common data
state: state data
pipeline:
  - name: Initialization
    type: linear
    phases:
      - name: Ingestion
        type: blocking
        producers:
          - class: step_producer.reinvestigation.ReinvestigationStepProducer
            name: Reinvestigation
            enable: "{{ENABLE_REINVESTIGATION}}"
            parameters:
              reinvestigation_api: "{{reinvestigation_api}}"
              state_pickle: "{{STATE_PICKLE_FILE}}"
              input_key: "{{INPUT_STATE_KEY}}"
              exclude_keys: "{{STATE_EXCLUDE_KEYS}}"
          - class: step_producer.investigation_input.InvestigationInputStepProducer
            name: Investigation Input
            enable: "{{ENABLE_INGESTION_PRODUCER}}"
            parameters:
              input_findings: "{{FINDINGS}}"
              input_observed_data: "{{OBSERVED_DATA}}"
              input_pattern: "{{STIX_PATTERN}}"
              udi: "{{udi}}"
              window_start: "{{start_ts}}"
              window_end: "{{stop_ts}}"
              max_trigger_events: "{{MAX_TRIGGER_EVENTS}}"
  # - name: Expansion Loop
  #   type: loop
  #   phases:
  #     - name: Investigation Timeout
  #       type: watchdog
  #       enable: "{{ENABLE_TIMEOUT_WATCHDOG}}"
  #       producers:
  #         - class: step_producer.wait_on_state.WaitTimeoutProducer
  #           name: Wait for Investigation Timeout
  #           parameters:
  #             timeout: "{{MAX_EXPANSION_LOOP_TIME_SECONDS}}"
  #             interval: 0.1
  #         - class: step_producer.stop_investigation.StopInvestigationProducer
  #           name: Stop Investigation
  #           run_after:
  #             - Wait for Investigation Timeout
  #     - name: Event Insertion
  #       type: blocking
  #       producers:
  #         - class: step_producer.evidence_insertion.EventsBatchInsertionProducer
  #           name: Event Batch Insertion
  #           parameters:
  #             batch: "{{EVENT_INSERTION_BATCH_SIZE}}"
  #     - name: Event Enrichment
  #       type: blocking
  #       enable: "{{ENABLE_EVENT_ENRICHMENT_PHASE}}"
  #       thread_count: 0
  #       producers:
  #         - class: step_producer.knowledge_base.KnowledgeBaseProducer
  #           name: Knowledge Base
  #           enable: "{{ENABLE_KNOWLEDGE_BASE_PRODUCER}}"
  #           parameters:
  #             kb:
  #               class: symptom.symptom_knowledge_base.SymptomKnowledgeBase
  #               parameters:
  #                 drc:
  #                   class: cp4s.drc.drc_api.DRCApi
  #                   parameters:
  #                     auth: "{{AUTH}}"
  #             parallelism: "{{KB_PARALLEL}}"
  #             batch: "{{KB_ENRICHMENT_BATCH}}"
  #             confidence_conversion: "{{KB_CONFIDENCE_CONVERSION}}"
  #     - name: Node Enrichment
  #       type: blocking
  #       enable: "{{ENABLE_NODE_ENRICHMENT_PHASE}}"
  #       thread_count: 2
  #       producers:
  #         - class: step_producer.tis_enrichment.TISStepProducer
  #           name: TIS Enrichment
  #           enable: "{{ENABLE_TIS_ENRICHMENT_PRODUCER}}"
  #           parameters:
  #             tis:
  #               class: cp4s.ti.tis.TISEnrichBatchApi
  #               parameters:
  #                 auth: "{{AUTH}}"
  #             timeout_seconds: "{{TIS_BATCH_TIMEOUT_SECS}}"
  #             symptom_threshold: "{{TIS_SYMPTOM_THRESHOLD}}"
  #             max_iocs: "{{TIS_BATCH_QUERY_MAX_IOC}}"
  #             batch: "{{TIS_BATCH_QUERY_MAX_SIZE}}"
  #             express: "{{TIS_EXPRESS}}"
  #         - class: step_producer.car_enrichment.CarEnrichmentProducer
  #           name: CAR Enrichment Producer
  #           enable: "{{ENABLE_CAR_ENRICHMENT_PRODUCER}}"
  #           parameters:
  #             car:
  #               class: cp4s.car.car_api.CARApi
  #               parameters:
  #                 auth: "{{AUTH}}"
  # - name: Completion
  #   type: linear
  #   phases:
  #     - name: Completion Analysis
  #       type: blocking
  #       enable: "{{ENABLE_COMPLETION_ANALYSIS_PHASE}}"
  #       thread_count: 8
  #       producers:
  #         - class: step_producer.classification.ClassificationProducer
  #           name: Completion Classification
  #           enable: "{{ENABLE_COMPLETION_CLASSIFICATION_PRODUCER}}"
  #           parameters:
  #             strategy:
  #               class: classification.strategy.ProvenanceTrackingStrategy
  #         - class: step_producer.investigation_scoring.InvestigationScoringProducer
  #           name: Completion Investigation Scoring
  #           enable: "{{ENABLE_COMPLETION_INVESTIGATION_SCORING_PRODUCER}}"
  #           run_after:
  #             - Completion Classification
  #         - class: step_producer.response_suggestion.ResponseSuggestionProducer
  #           name: Completion Response Recommendation
  #           enable: "{{ENABLE_COMPLETION_RESPONSE_PRODUCER}}"
  #           parameters:
  #             udi: "{{udi}}"
  #             responders: "{{responders}}"
  #           run_after:
  #             - Completion Classification
  #     - name: Write Completed Results
  #       type: blocking
  #       enable: "{{ENABLE_WRITE_COMPLETED_RESULTS_PHASE}}"
  #       thread_count: 4
  #       producers:
  #         - class: step_producer.write_investigation_results.ExportInvestigationResultsProducer
  #           name: Write Final Investigation Results
  #           enable: "{{ENABLE_WRITE_FINAL_INVESTIGATION_RESULTS_PRODUCER}}"
  #           parameters:
  #             out_dir: "{{OUT_DIR}}"
  #             prefix: "results"
  #             include_related_ti_events: "{{INCLUDE_RELATED_TI_EVENTS}}"
  #             eliminate_dup_tis_event_symptoms: "{{ELIMINATE_DUPLICATE_SYMPTOMS}}"
  #             include_case_findings: "{{INCLUDE_CASE_FINDINGS}}"
  #             include_observables: "{{INCLUDE_OBSERVABLES}}"
  #             eliminate_dup_case_findings: "{{EXCLUDE_CASE_FINDINGS_DUPLICATES}}"
  #             max_events: "{{MAX_RESULT_EVENTS}}"
  #             log: "{{LOG_INVESTIGATION_RESULTS}}"
  #             include_process_tree: "{{EXTRACT_PROCESSES_ENABLED}}"
  #             minio: "{{minio_client}}"
  #         - class: step_producer.write_investigation_results.ExportStatePickleProducer
  #           name: Write Final State Pickle
  #           enable: "{{ENABLE_WRITE_FINAL_STATE_PICKLE_PRODUCER}}"
  #           parameters:
  #             out_dir: "{{OUT_DIR}}"
  #             prefix: "FINAL"
  #             reinvestigation_api: "{{reinvestigation_api}}"
  #             input_key: "{{INPUT_STATE_KEY}}"
  #             log: "{{LOG_PICKLE}}"
  #             minio: "{{minio_client}}"
  #         - class: step_producer.write_investigation_results.ExportGraphGexfProducer
  #           name: Write Final Graph Gexf
  #           enable: "{{ENABLE_WRITE_FINAL_GRAPH_GEXF_PRODUCER}}"
  #           parameters:
  #             out_dir: "{{OUT_DIR}}"
  #             prefix: "FINAL"
  #             log: "{{LOG_GEXF}}"
  #             minio: "{{minio_client}}"
  #         - class: step_producer.write_investigation_results.ExportEngineStatistics
  #           name: Write Final Engine Statistics
  #           enable: "{{ENABLE_WRITE_FINAL_STATISTICS_PRODUCER}}"
  #           run_after:
  #             - Write Final Investigation Results
  #             - Write Final State Pickle
  #             - Write Final Graph Gexf
  #           parameters:
  #             out_dir: "{{OUT_DIR}}"
  #             prefix: "FINAL_STATISTICS"
  #             log: "{{LOG_STATISTICS}}"
  #             minio: "{{minio_client}}"